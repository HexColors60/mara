#!/usr/bin/python

import getopt
import sys

import cletus.settings as settings
import cletus.cli as cli

# Help
help_intro = """cli

A chatroom server
"""
help_usage = """Usage:
    cletus
        Run a server
"""
help_options = """Options:
    -h, --help
        Show this message
    
    -l LOGFILE, --logfile=LOGFILE
        Path to the logfile to use for the server
        Default: /var/log/socketproxy.log
    
    -v, --verbosity=LEVEL
        Log verbosity level for the server
        """ + "        \n".join( log.help_verbosity.strip().splitlines() ) + """
        Default: 0
"""

def usage(state=0):
    if not state:
        print help_intro
    print help_usage
    if not state:
        print help_options
    sys.exit(state)


#
# Command functions
#

def cmd_run(target):
    """
    Set up the proxy server
    """
    cli.run(settings)
   
   
#
# Argument parser and command dispatcher
#

def main(argv):
    """
    Main function to parse arguments and dispatch
    """
    # Find command
    cmd = None
    if len(argv) > 0:
        cmd = argv.pop(0)
    
    try:
        opts, args = getopt.getopt(argv, 'hp:d', [
            'help', 'logfile=', 'verbosity=',
        ])
    except getopt.GetoptError, e:
        print "Invalid command line options: %s" % e
        usage(USAGE_ERROR)
    
    # Process options
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage()
        
        elif opt == '--logfile':
            settings.logfile = arg
        
        elif opt == '--verbosity':
            settings.verbosity = int(arg)
        
    # Server
    if cmd:
        usage(USAGE_ERROR)
    else:
        cmd_run()


if __name__ == "__main__":
    main(sys.argv[1:])
